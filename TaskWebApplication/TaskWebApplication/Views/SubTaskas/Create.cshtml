@model TaskWebApplication.Models.SubTaska

@{
  ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal">
    <h4>SubTaska</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
      @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Command, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Command, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Command, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.ErrorMessage, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.ErrorMessage, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ErrorMessage, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.order, htmlAttributes: new {@class = "control-label col-md-2"})
      <div class="col-md-10">
        @Html.EditorFor(model => model.order, new {htmlAttributes = new {@class = "form-control"}})
        @Html.ValidationMessageFor(model => model.order, "", new {@class = "text-danger"})
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.TaskaId, "Taska", htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownList("TaskaId", null, "-- Please select a Taska --", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.TaskaId, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Create" class="btn btn-default" />
      </div>
    </div>
  </div>
}

<div id="linkamos">

</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}

<!-- jQuery -->
@Scripts.Render("~/bundles/jquery-3")

<script type="text/javascript">
  $(document).ready(function () {

    function makelink(idvalue) {
      var link = '@Html.ActionLink("Back to List", "Index", new {id = -1})';
      link = link.replace('-1', idvalue);
      $('#linkamos').html(link);
    }

    $('#TaskaId').on('change', function () {
      makelink($(this).val());
    });

    makelink($('#TaskaId').val());
  });
</script>